name: Deploy Iraqi E-commerce Platform

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, gd, pdo_mysql

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: composer install --prefer-dist --no-progress

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Setup Backend Environment
      working-directory: ./backend
      run: |
        cp .env.example .env
        php artisan key:generate
        php artisan migrate --force

    - name: Run Backend Tests
      working-directory: ./backend
      run: php artisan test

    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Backend Image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/iraqi-ecommerce-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and Push Frontend Image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/iraqi-ecommerce-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to Production Server
      if: github.ref == 'refs/heads/production'
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.PRODUCTION_HOST }}
        username: ${{ secrets.PRODUCTION_USER }}
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        script: |
          cd /path/to/iraqi-ecommerce-lottery
          git pull origin production
          docker-compose pull
          docker-compose up -d --force-recreate
          docker-compose exec -T backend php artisan migrate --force
          docker-compose exec -T backend php artisan config:cache
          docker-compose exec -T backend php artisan route:cache
